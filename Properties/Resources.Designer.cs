//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Choker.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Choker.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT chokes
        ///  FROM users
        ///  WHERE id = $id;.
        /// </summary>
        internal static string Get_Chokes {
            get {
                return ResourceManager.GetString("Get_Chokes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT max_loudness, interval, mute_time
        ///  FROM servers
        ///  WHERE id = $id;.
        /// </summary>
        internal static string Get_Configuration {
            get {
                return ResourceManager.GetString("Get_Configuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT prefixes
        ///  FROM servers
        ///  WHERE id = $id;.
        /// </summary>
        internal static string Get_Prefixes {
            get {
                return ResourceManager.GetString("Get_Prefixes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT level
        ///  FROM roles
        ///  WHERE id in ($ids)
        ///  ORDER BY level DESC
        ///  LIMIT 1;.
        /// </summary>
        internal static string Get_Role_Level_Highest {
            get {
                return ResourceManager.GetString("Get_Role_Level_Highest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT id, level
        ///  FROM roles
        ///  WHERE id in ($ids);.
        /// </summary>
        internal static string Get_Role_Levels {
            get {
                return ResourceManager.GetString("Get_Role_Levels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT id, chokes
        ///  FROM users
        ///  WHERE id in ($ids)
        ///  ORDER BY chokes DESC
        ///  LIMIT $num;.
        /// </summary>
        internal static string Get_Top {
            get {
                return ResourceManager.GetString("Get_Top", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS roles (
        ///  id INTEGER PRIMARY KEY,
        ///  level INTEGER DEFAULT 0
        ///) WITHOUT ROWID;.
        /// </summary>
        internal static string Initialize_Roles_Table {
            get {
                return ResourceManager.GetString("Initialize_Roles_Table", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS servers (
        ///  id INTEGER PRIMARY KEY,
        ///  prefixes TEXT DEFAULT &apos;[]&apos;,
        ///  interval INTEGER DEFAULT 300,
        ///  mute_time INTEGER DEFAULT 3000,
        ///  max_loudness REAL DEFAULT 95.0
        ///) WITHOUT ROWID;.
        /// </summary>
        internal static string Initialize_Servers_Table {
            get {
                return ResourceManager.GetString("Initialize_Servers_Table", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS users (
        ///  id INTEGER PRIMARY KEY,
        ///  chokes INTEGER DEFAULT 0
        ///) WITHOUT ROWID;.
        /// </summary>
        internal static string Initialize_Users_Table {
            get {
                return ResourceManager.GetString("Initialize_Users_Table", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO users (id, chokes)
        ///  VALUES($id, $chokes)
        ///  ON CONFLICT(id)
        ///  DO UPDATE SET chokes=excluded.chokes;.
        /// </summary>
        internal static string Set_Chokes {
            get {
                return ResourceManager.GetString("Set_Chokes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO servers (id, interval)
        ///  VALUES($id, $interval)
        ///  ON CONFLICT(id)
        ///  DO UPDATE SET interval=excluded.interval;.
        /// </summary>
        internal static string Set_Interval {
            get {
                return ResourceManager.GetString("Set_Interval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO servers (id, max_loudness)
        ///  VALUES($id, $max_loudness)
        ///  ON CONFLICT(id)
        ///  DO UPDATE SET max_loudness=excluded.max_loudness;.
        /// </summary>
        internal static string Set_Max_Loudness {
            get {
                return ResourceManager.GetString("Set_Max_Loudness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO servers (id, mute_time)
        ///  VALUES($id, $mute_time)
        ///  ON CONFLICT(id)
        ///  DO UPDATE SET mute_time=excluded.mute_time;.
        /// </summary>
        internal static string Set_Mute_Time {
            get {
                return ResourceManager.GetString("Set_Mute_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO servers (id, prefixes)
        ///  VALUES($id, $prefixes)
        ///  ON CONFLICT(id)
        ///  DO UPDATE SET prefixes=excluded.prefixes;.
        /// </summary>
        internal static string Set_Prefixes {
            get {
                return ResourceManager.GetString("Set_Prefixes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO roles (id, level)
        ///  VALUES($id, $level)
        ///  ON CONFLICT(id)
        ///  DO UPDATE SET level=excluded.level;.
        /// </summary>
        internal static string Set_Role_Level {
            get {
                return ResourceManager.GetString("Set_Role_Level", resourceCulture);
            }
        }
    }
}
